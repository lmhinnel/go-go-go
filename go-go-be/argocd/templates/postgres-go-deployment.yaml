apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f ../../docker-compose.yml
    kompose.service.type: nodeport
    kompose.version: 1.26.0 (40646f47)
  creationTimestamp: null
  labels:
    io.kompose.service: postgres-go
  name: postgres-go
  namespace: {{ .Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: postgres-go
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f ../../docker-compose.yml
        kompose.service.type: nodeport
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.service: postgres-go
    spec:
      hostname: postgres-go
      containers:
        - image: "{{ .Values.imageDb.name }}:{{ .Values.imageDb.tag }}"
          # livenessProbe:
          #   exec:
          #     command:
          #       - pg_isready -U postgres
          #   failureThreshold: 5
          #   periodSeconds: 1
          #   timeoutSeconds: 5
          name: postgres-go
          ports:
            - containerPort: 5432
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: pgdata
      restartPolicy: Always
      volumes:
        - name: pgdata
          persistentVolumeClaim:
            claimName: pgdata
status: {}
